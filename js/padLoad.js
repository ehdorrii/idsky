
///////////////////////////////////////////////////////////////////////////////////////////////////
////                                       RTCC EMU Loads                                      ////
///////////////////////////////////////////////////////////////////////////////////////////////////

/*=======
Apollo 16
=======*/

// Values are all from the Apollo 16 pad load, except for those which are
// marked with an asterisk (*), which are taken from the Apollo 17 pad
// load: these values were not listed in the Apollo 16 pad load, but are
// mostly hardware compensation values, and as such the exact values
// are functionally irrelevant.

function padLoad() {
	e[00737] = 037777;                     // NO.PASS
	e[01135] = 030653; e[01136] = 023562;  // PADLONG
	e[01342] = 006510; e[01343] = 007025;  // RTED1
	e[01344] = 000143;                     // DVTHRESH
	e[01345] = 000000; e[01346] = 033260;  // HORIZALT
	e[01347] = 037723;                     // ALTVAR
	e[01350] = 001147;                     // EMDOT *
	e[01452] = 077252;                     // PBIASX *
	e[01453] = 063554;                     // PIPASCFX *
	e[01454] = 077602;                     // PBIASY *
	e[01455] = 074435;                     // PIPASCFY *
	e[01456] = 002371;                     // PBIASZ *
	e[01457] = 062564;                     // PIPASCFZ *
	e[01460] = 000115;                     // NBDX *
	e[01461] = 077762;                     // NBDY *
	e[01462] = 000231;                     // NBDZ *
	e[01463] = 000205;                     // ADIAX *
	e[01464] = 000367;                     // ADIAY *
	e[01465] = 077615;                     // ADIAZ *
	e[01466] = 077615;                     // ADSRAX *
	e[01467] = 000162;                     // ADSRAY *
	e[01470] = 077663;                     // ADSRAZ *
	e[01711] = 000000; e[01712] = 034355;  // UNITW
	e[01713] = 000000; e[01714] = 014715;
	e[01715] = 037777; e[01716] = 037777;
	e[01763] = 001547;                     // EIMP1SEC *
	e[01764] = 002101;                     // EFIMP01 *
	e[01765] = 001606;                     // EFIMP16 *
	e[01766] = 012160;                     // E3J22R2M
	e[01767] = 003363;                     // E32C31RM
	e[01770] = 000235;                     // TRUNSF *
	e[01771] = 000502;                     // SHAFTSF *
	e[02000] = 000137;                     // WRENDPOS
	e[02001] = 000763;                     // WRENDVEL
	e[02002] = 000023;                     // RMAX
	e[02003] = 000001;                     // VMAX
	e[02004] = 000000;                     // WORBPOS
	e[02005] = 000000;                     // WORBVEL
	e[02006] = 000471;                     // S22WSUBL
	e[02007] = 000364; e[02008] = 004400;  // RPVAR
	e[02011] = 077777; e[02012] = 075361;  // 504LM
	e[02013] = 000013; e[02014] = 014450;
	e[02015] = 000004; e[02016] = 003651;
	e[02017] = 000002; e[02020] = 026244;  // EMSALT
	e[02025] = 000311; e[02026] = 034350;  // RLS
	e[02027] = 000070; e[02030] = 001504;
	e[02031] = 077736; e[02032] = 072015;
	e[02033] = 000011; e[02034] = 022530; e[02035] = 012765; // TIMEMO
	e[02036] = 077771; e[02037] = 056461; e[02040] = 000010; e[02041] = 005524; // VECOEM
	e[02042] = 000003; e[02043] = 016503; e[02044] = 000023; e[02045] = 033241;
	e[02046] = 077777; e[02047] = 061527; e[02050] = 000001; e[02051] = 016222;
	e[02052] = 077765; e[02053] = 054467; e[02054] = 077735; e[02055] = 046620;
	e[02056] = 077756; e[02057] = 043000; e[02060] = 077777; e[02061] = 040425;
	e[02062] = 000063; e[02063] = 024751; e[02064] = 000031; e[02065] = 014567;
	e[02066] = 000115; e[02067] = 026534; e[02070] = 077463; e[02071] = 073546;
	e[02072] = 077642; e[02073] = 052154; e[02074] = 076151; e[02075] = 043216;
	e[02076] = 000134; e[02077] = 034211; e[02100] = 077735; e[02101] = 077273;
	e[02102] = 001064; e[02103] = 016257; e[02104] = 004037; e[02105] = 036105;
	e[02106] = 002051; e[02107] = 005125; e[02110] = 010007; e[02111] = 000042;
	e[02112] = 075152; e[02113] = 077347; e[02114] = 077244; e[02115] = 053172;
	e[02116] = 073457; e[02117] = 061224; e[02120] = 067670; e[02121] = 053324;
	e[02122] = 073567; e[02123] = 045641; e[02124] = 072307; e[02125] = 073623;
	e[02126] = 001715; e[02127] = 026726; e[02130] = 000351; e[02131] = 025674;
	e[02132] = 016450; e[02133] = 012150;  // RESO
	e[02134] = 010721; e[02135] = 003577;
	e[02136] = 003671; e[02137] = 032360;
	e[02140] = 065574; e[02141] = 076301;  // VESO
	e[02142] = 016101; e[02143] = 014665;
	e[02144] = 006100; e[02145] = 012514;
	e[02146] = 000530; e[02147] = 010737;  // OMEGAES
	e[02371] = 000017;                     // WRDTIME
	e[02372] = 000002;                     // MINBLKTM
	e[02373] = 000005;                     // TBEFCOMP
	e[02374] = 000005;                     // BRNBLKTM
	e[02375] = 000026;                     // MAXWTIME
	e[02376] = 000003;                     // FINCMPTM
	e[02377] = 000142;                     // INTVAR
	e[03000] = 000436;                     // WMIDPOS
	e[03001] = 002732;                     // WMIDVEL
	e[03002] = 000000; e[03003] = 000000;  // RVAR
	e[03004] = 077777; e[03005] = 077777; e[03006] = 042757; // RVARMIN
	e[03007] = 010510;                     // LADPAD
	e[03010] = 006477;                     // LODPAD
	e[03011] = 074552;                     // ALFAPAD
	e[03012] = 001470;                     // P37RANGE
	e[03072] = 010012;                     // LEMMASS
	e[03073] = 016641;                     // CSMMASS
}